{"version":3,"sources":["skylark-fluxslider.js"],"names":[],"mappingsfile":"../skylark-fluxslider.js","sourcesContent":["define('skylark-fluxslider/flux',[\r\n\t\"skylark-langx-ns\"\r\n],function(skylark) {\r\n\treturn skylark.attach(\"intg.flux\",{\r\n\t\tversion: '@VERSION'\r\n\t});\r\n});\ndefine('skylark-fluxslider/flux.browser',[\n\t\"skylark-jquery\",\n\t\"./flux\"\n],function($,flux) {\n\tflux.browser = {\n\t\tinit: function() {\n\t\t\t// Have we already been initialised?\n\t\t\tif(flux.browser.supportsTransitions !== undefined)\n\t\t\t\treturn;\n\n\t\t\tvar div = document.createElement('div'),\n\t\t\t\tprefixes = ['-webkit', '-moz', '-o', '-ms'],\n\t\t\t\tdomPrefixes = ['Webkit', 'Moz', 'O', 'Ms'];\n\n\t\t\t// Does the current browser support CSS Transitions?\n\t\t\tif(window.Modernizr && Modernizr.csstransitions !== undefined)\n\t\t\t\tflux.browser.supportsTransitions = Modernizr.csstransitions;\n\t\t\telse\n\t\t\t{\n\t\t\t\tflux.browser.supportsTransitions = this.supportsCSSProperty('Transition');\n\t\t\t}\n\n\t\t\t// Does the current browser support 3D CSS Transforms?\n\t\t\tif(window.Modernizr && Modernizr.csstransforms3d !== undefined)\n\t\t\t\tflux.browser.supports3d = Modernizr.csstransforms3d;\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Custom detection when Modernizr isn't available\n\t\t\t\tflux.browser.supports3d = this.supportsCSSProperty(\"Perspective\");\n\t\t\t\t\n\t\t\t\tif ( flux.browser.supports3d && 'webkitPerspective' in $('body').get(0).style ) {\n\t\t\t\t\t// Double check with a media query (similar to how Modernizr does this)\n\t\t\t\t\tvar div3D = $('<div id=\"csstransform3d\"></div>');\n\t\t\t\t\tvar mq = $('<style media=\"(transform-3d), ('+prefixes.join('-transform-3d),(')+'-transform-3d)\">div#csstransform3d { position: absolute; left: 9px }</style>');\n\n\t\t\t\t\t$('body').append(div3D);\n\t\t\t\t\t$('head').append(mq);\n\n\t\t\t\t\tflux.browser.supports3d = div3D.get(0).offsetLeft == 9;\n\n\t\t\t\t\tdiv3D.remove();\n\t\t\t\t\tmq.remove();\t\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\t\tsupportsCSSProperty: function(prop) {\n\t\t\tvar div = document.createElement('div'),\n\t\t\t\tprefixes = ['-webkit', '-moz', '-o', '-ms'],\n\t\t\t\tdomPrefixes = ['Webkit', 'Moz', 'O', 'Ms'];\n\t\t\t\t\n\t\t\tvar support = false;\n\t\t\tfor(var i=0; i<domPrefixes.length; i++)\n\t\t\t{\n\t\t\t\tif(domPrefixes[i]+prop in div.style)\n\t\t\t\t\tsupport = support || true;\n\t\t\t}\n\t\t\t\n\t\t\treturn support;\n\t\t},\n\t\ttranslate: function(x, y, z) {\n\t\t\tx = (x != undefined) ? x : 0;\n\t\t\ty = (y != undefined) ? y : 0;\n\t\t\tz = (z != undefined) ? z : 0;\n\n\t\t\treturn 'translate' + (flux.browser.supports3d ? '3d(' : '(') + x + 'px,' + y + (flux.browser.supports3d ? 'px,' + z + 'px)' : 'px)');\n\t\t},\n\n\t\trotateX: function(deg) {\n\t\t\treturn flux.browser.rotate('x', deg);\n\t\t},\n\n\t\trotateY: function(deg) {\n\t\t\treturn flux.browser.rotate('y', deg);\n\t\t},\n\n\t\trotateZ: function(deg) {\n\t\t\treturn flux.browser.rotate('z', deg);\n\t\t},\n\n\t\trotate: function(axis, deg) {\n\t\t\tif(!axis in {'x':'', 'y':'', 'z':''})\n\t\t\t\taxis = 'z';\n\n\t\t\tdeg = (deg != undefined) ? deg : 0;\n\n\t\t\tif(flux.browser.supports3d)\n\t\t\t\treturn 'rotate3d('+(axis == 'x' ? '1' : '0')+', '+(axis == 'y' ? '1' : '0')+', '+(axis == 'z' ? '1' : '0')+', '+deg+'deg)';\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(axis == 'z')\n\t\t\t\t\treturn 'rotate('+deg+'deg)';\n\t\t\t\telse\n\t\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t};\n\n\t$(function(){\n\t\t// To continue to work with legacy code, ensure that flux.browser is initialised on document ready at the latest\n\t\tflux.browser.init();\n\t});\n});\ndefine('skylark-fluxslider/flux.slider',[\n\t\"skylark-jquery\",\n\t\"./flux\"\n],function($,flux) {\n\tflux.slider = function(elem, opts) {\n\t\t// Setup the flux.browser singleton to perform feature detection\n\t\tflux.browser.init();\n\n\t\tif(!flux.browser.supportsTransitions)\n\t\t{\n\t\t\tif(window.console && window.console.error)\n\t\t\t\tconsole.error(\"Flux Slider requires a browser that supports CSS3 transitions\");\n\t\t}\n\n\t\tvar _this = this;\n\n\t\tthis.element = $(elem);\n\n\t\t// Make a list of all available transitions\n\t\tthis.transitions = [];\n\t\tfor(var fx in flux.transitions)\n\t\t\tthis.transitions.push(fx);\n\n\t\tthis.options = $.extend({\n\t\t\tautoplay: true,\n\t\t\ttransitions: this.transitions,\n\t\t\tdelay: 4000,\n\t\t\tpagination: true,\n\t\t\tcontrols: false,\n\t\t\tcaptions: false,\n\t\t\twidth: null,\n\t\t\theight: null,\n\t\t\tonTransitionEnd: null\n\t\t}, opts);\n\n\t\t// Set the height/width if given [EXPERIMENTAL!]\n\t\tthis.height = this.options.height ? this.options.height\t: null;\n\t\tthis.width \t= this.options.width  ? this.options.width \t: null;\n\n\t\t// Filter out non compatible transitions\n\t\tvar newTrans = [];\n\t\t$(this.options.transitions).each(function(index, tran){\n\t\t\tvar t = new flux.transitions[tran](this),\n\t\t\t\tcompatible = true;\n\t\t\t\n\t\t\tif(t.options.requires3d && !flux.browser.supports3d)\n\t\t\t\tcompatible = false;\n\t\t\t\t\n\t\t\tif(t.options.compatibilityCheck)\n\t\t\t\tcompatible = t.options.compatibilityCheck();\n\n\t\t\tif(compatible)\n\t\t\t\tnewTrans.push(tran);\n\t\t});\t\t\n\n\t\tthis.options.transitions = newTrans;\n\n\t\tthis.images = new Array();\n\t\tthis.imageLoadedCount = 0;\n\t\tthis.currentImageIndex = 0;\n\t\tthis.nextImageIndex = 1;\n\t\tthis.playing = false;\n\n\n\t\tthis.container = $('<div class=\"fluxslider\"></div>').appendTo(this.element);\n\t\t\n\t\tthis.surface = $('<div class=\"surface\" style=\"position: relative\"></div>').appendTo(this.container);\n\t\t\n\t\t// Listen for click events as we may want to follow a link\n\t\tthis.container.bind('click', function(event) {\n\t\t\tif($(event.target).hasClass('hasLink'))\n\t\t\t\twindow.location = $(event.target).data('href');\n\t\t});\n\n\t\tthis.imageContainer = $('<div class=\"images loading\"></div>').css({\n\t\t\t'position': 'relative',\n\t\t\t'overflow': 'hidden',\n\t\t\t'min-height': '100px'\n\t\t}).appendTo(this.surface);\n\t\t\n\t\t// If the height/width is already set then resize the container\n\t\tif(this.width && this.height)\n\t\t{\n\t\t\tthis.imageContainer.css({\n\t\t\t\twidth: this.width+'px',\n\t\t\t\theight: this.height+'px'\n\t\t\t});\n\t\t}\n\n\t\t// Create the placeholders for the current and next image\n\t\tthis.image1 = $('<div class=\"image1\" style=\"height: 100%; width: 100%\"></div>').appendTo(this.imageContainer);\n\t\tthis.image2 = $('<div class=\"image2\" style=\"height: 100%; width: 100%\"></div>').appendTo(this.imageContainer);\n\n\t\t$(this.image1).add(this.image2).css({\n\t\t\t'position': 'absolute',\n\t\t\t'top': '0px',\n\t\t\t'left': '0px'\n\t\t});\n\t\t\n\t\t// Get a list of the images to use\n\t\tthis.element.find('img, a img').each(function(index, found_img){\n\t\t\tvar imgClone = found_img.cloneNode(false),\n\t\t\t\tlink = $(found_img).parent();\n\n\t\t\t// If this img is directly inside a link then save the link for later use\n\t\t\tif(link.is('a'))\n\t\t\t\t$(imgClone).data('href', link.attr('href'));\n\n\t\t\t_this.images.push(imgClone);\n\n\t\t\t// Remove the images from the DOM\n\t\t\t$(found_img).remove();\n\t\t});\n\t\t\n\t\t// Load the images afterwards as IE seems to load images synchronously\n\t\tfor(var i=0; i<this.images.length; i++) {\n\t\t\tvar image = new Image();\n\t\t\timage.onload = function() {\n\t\t\t\t_this.imageLoadedCount++;\n\n\t\t\t\t_this.width  = _this.width \t? _this.width  : this.width;\n\t\t\t\t_this.height = _this.height ? _this.height : this.height;\n\n\t\t\t\tif(_this.imageLoadedCount >= _this.images.length)\n\t\t\t\t{\n\t\t\t\t\t_this.finishedLoading();\n\t\t\t\t\t_this.setupImages();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Load the image to ensure its cached by the browser\n\t\t\timage.src = this.images[i].src;\n\t\t}\n\t\t\n\t\t// Catch when a transition has finished\n\t\tthis.element.bind('fluxTransitionEnd', function(event, data) {\n\t\t\t// If the slider is currently playing then set the timeout for the next transition\n\t\t\t// if(_this.isPlaying())\n\t\t\t// \t_this.start();\n\t\t\t\n\t\t\t// Are we using a callback instead of events for notifying about transition ends?\n\t\t\tif(_this.options.onTransitionEnd) {\t\t\t\t\t\n\t\t\t\tevent.preventDefault();\n\t\t\t\t_this.options.onTransitionEnd(data);\n\t\t\t}\n\t\t});\n\n\t\t// Should we auto start the slider?\n\t\tif(this.options.autoplay)\n\t\t\tthis.start();\n\t\t\t\n\t\t// Handle swipes\n\t\tthis.element.bind('swipeLeft', function(event){\n\t\t\t_this.next(null, {direction: 'left'});\n\t\t}).bind('swipeRight', function(event){\n\t\t\t_this.prev(null, {direction: 'right'});\n\t\t});\n\t\t\n\t\t// Under FF7 autoplay breaks when the current tab loses focus\n\t\tsetTimeout(function(){\n\t\t\t$(window).focus(function(){\n\t\t\t\tif(_this.isPlaying())\n\t\t\t\t\t_this.next();\n\t\t\t});\n\t\t}, 100);\n\t};\n\n\tflux.slider.prototype = {\n\t\tconstructor: flux.slider,\n\t\tplaying: false,\n\t\tstart: function() {\n\t\t\tvar _this = this;\n\t\t\tthis.playing = true;\n\t\t\tthis.interval = setInterval(function() {\n\t\t\t\tconsole.log('play');\n\t\t\t\t_this.transition();\n\t\t\t}, this.options.delay);\n\t\t},\n\t\tstop: function() {\n\t\t\tthis.playing = false;\n\t\t\tclearInterval(this.interval);\n\t\t\tthis.interval = null;\n\t\t},\n\t\tisPlaying: function() {\n\t\t\treturn this.playing;\n\t\t\t//return this.interval != null;\n\t\t},\n\t\tnext: function(trans, opts) {\n\t\t\topts = opts || {};\n\t\t\topts.direction = 'left';\n\t\t\tthis.showImage(this.currentImageIndex+1, trans, opts);\n\t\t},\n\t\tprev: function(trans, opts) {\n\t\t\topts = opts || {};\n\t\t\topts.direction = 'right';\n\t\t\tthis.showImage(this.currentImageIndex-1, trans, opts);\n\t\t},\n\t\tshowImage: function(index, trans, opts) {\n\t\t\tthis.setNextIndex(index);\n\t\t\t\n\t\t\t// Temporarily stop the transition interval\n\t\t\t//clearInterval(this.interval);\n\t\t\t//this.interval = null;\n\t\t\t\n\t\t\tthis.setupImages();\n\t\t\tthis.transition(trans, opts);\n\t\t},  \n\t\tfinishedLoading: function() {\n\t\t\tvar _this = this;\n\n\t\t\tthis.container.css({\n\t\t\t\twidth: this.width+'px',\n\t\t\t\theight: this.height+'px'\n\t\t\t});\n\n\t\t\tthis.imageContainer.removeClass('loading');\n\n\t\t\t// Should we setup a pagination view?\n\t\t\tif(this.options.pagination)\n\t\t\t{\n\t\t\t\t// TODO: Attach to touch events if appropriate\n\t\t\t\tthis.pagination = $('<ul class=\"pagination\"></ul>').css({\n\t\t\t\t\tmargin: '0px',\n\t\t\t\t\tpadding: '0px',\n\t\t\t\t\t'text-align': 'center'\n\t\t\t\t});\n\n\t\t\t\tthis.pagination.bind('click', function(event){\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t_this.showImage($(event.target).data('index'));\n\t\t\t\t});\n\n\t\t\t\t$(this.images).each(function(index, image){\n\t\t\t\t\tvar li = $('<li data-index=\"'+index+'\">'+(index+1)+'</li>').css({\n\t\t\t\t\t\tdisplay: 'inline-block',\n\t\t\t\t\t\t'margin-left': '0.5em',\n\t\t\t\t\t\t'cursor': 'pointer'\n\t\t\t\t\t}).appendTo(_this.pagination);\n\n\t\t\t\t\tif(index == 0)\n\t\t\t\t\t\tli.css('margin-left', 0).addClass('current');\n\t\t\t\t});\n\n\t\t\t\tthis.container.append(this.pagination);\n\t\t\t}\n\n\t\t\t// Resize\n\t\t\t$(this.imageContainer).css({\n\t\t\t\twidth: this.width+'px',\n\t\t\t\theight: this.height+'px'\n\t\t\t});\n\n\t\t\t$(this.image1).css({\n\t\t\t\twidth: this.width+'px',\n\t\t\t\theight: this.height+'px'\n\t\t\t});\n\n\t\t\t$(this.image2).css({\n\t\t\t\twidth: this.width+'px',\n\t\t\t\theight: this.height+'px'\n\t\t\t});\n\n\t\t\tthis.container.css({\n\t\t\t\twidth: this.width+'px',\n\t\t\t\theight: this.height+(this.options.pagination?this.pagination.height():0)+'px'\n\t\t\t});\n\t\t\t\n\t\t\t// Should we add prev/next controls?\n\t\t\tif(this.options.controls){\n\t\t\t\tvar css = {\n\t\t\t\t\tpadding: '4px 10px 10px',\n\t\t\t\t\t'font-size': '60px',\n\t\t\t\t\t'font-family': 'arial, sans-serif',\n\t\t\t\t\t'line-height': '1em',\n\t\t\t\t\t'font-weight': 'bold',\n\t\t\t\t\tcolor: '#FFF',\n\t\t\t\t\t'text-decoration': 'none',\n\t\t\t\t\tbackground: 'rgba(0,0,0,0.5)',\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t'z-index': 2000\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tthis.nextButton = $('<a href=\"#\">»</a>').css(css).css3({\n\t\t\t\t\t'border-radius': '4px'\n\t\t\t\t}).appendTo(this.surface).bind('click', function(event){\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t_this.next();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tthis.prevButton = $('<a href=\"#\">«</a>').css(css).css3({\n\t\t\t\t\t'border-radius': '4px'\n\t\t\t\t}).appendTo(this.surface).bind('click', function(event){\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t_this.prev();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tvar top = (this.height - this.nextButton.height())/2;\n\t\t\t\tthis.nextButton.css({\n\t\t\t\t\ttop: top+'px',\n\t\t\t\t\tright: '10px'\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tthis.prevButton.css({\n\t\t\t\t\ttop: top+'px',\n\t\t\t\t\tleft: '10px'\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t// Should we use captions?\n\t\t\tif(this.options.captions){\n\t\t\t\tthis.captionBar = $('<div class=\"caption\"></div>').css({\n\t\t\t\t\tbackground: 'rgba(0,0,0,0.6)',\n\t\t\t\t\tcolor: '#FFF',\n\t\t\t\t\t'font-size': '16px',\n\t\t\t\t\t'font-family': 'helvetica, arial, sans-serif',\n\t\t\t\t\t'text-decoration': 'none',\n\t\t\t\t\t'font-weight': 'bold',\n\t\t\t\t\tpadding: '1.5em 1em',\n\t\t\t\t\topacity: 0,\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t'z-index': 110,\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tbottom: 0\n\t\t\t\t}).css3({\n\t\t\t\t\t'transition-property': 'opacity',\n\t\t\t\t\t'transition-duration': '800ms',\n\t\t\t\t\t'box-sizing': 'border-box'\n\t\t\t\t}).prependTo(this.surface);\n\t\t\t}\n\t\t\t\n\t\t\tthis.updateCaption();\n\t\t},\n\t\tsetupImages: function() {\n\t\t\tvar img1 = this.getImage(this.currentImageIndex),\n\t\t\t\tcss1 = {\n\t\t\t\t\t'background-image': 'url(\"'+img1.src+'\")',\n\t\t\t\t\t'z-index': 101,\n\t\t\t\t\t'cursor': 'auto'\n\t\t\t\t};\n\n\t\t\t// Does this image have an associated link?\n\t\t\tif($(img1).data('href'))\n\t\t\t{\n\t\t\t\tcss1.cursor = 'pointer';\n\t\t\t\tthis.image1.addClass('hasLink');\n\t\t\t\tthis.image1.data('href', $(img1).data('href'));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.image1.removeClass('hasLink');\n\t\t\t\tthis.image1.data('href', null);\n\t\t\t}\n\n\t\t\tthis.image1.css(css1).children().remove();\n\n\t\t\tthis.image2.css({\n\t\t\t\t'background-image': 'url(\"'+this.getImage(this.nextImageIndex).src+'\")',\n\t\t\t\t'z-index': 100\n\t\t\t}).show();\n\n\t\t\tif(this.options.pagination && this.pagination)\n\t\t\t{\n\t\t\t\tthis.pagination.find('li.current').removeClass('current');\n\t\t\t\t$(this.pagination.find('li')[this.currentImageIndex]).addClass('current');\n\t\t\t}\n\t\t},\n\t\ttransition: function(transition, opts) {\n\t\t\t// Allow a transition to be picked from ALL available transitions (not just the reduced set)\n\t        if(transition == undefined || !flux.transitions[transition])\n\t        {\n\t            // Pick a transition at random from the (possibly reduced set of) transitions\n\t            var index = Math.floor(Math.random()*(this.options.transitions.length));\n\t            transition = this.options.transitions[index];\n\t        }\n\t\t\t\n\t\t\tvar tran = null;\n\n\t\t\ttry {\n\t\t        tran = new flux.transitions[transition](this, $.extend(this.options[transition] ? this.options[transition] : {}, opts));\n\t\t\t}\n\t\t\tcatch(e) {\n\t\t\t\t// If an invalid transition has been provided then use the fallback (default is to just switch the image)\n\t\t\t\ttran = new flux.transition(this, {fallback: true});\n\t\t\t}\n\n\t        tran.run();\n\t\t\t\n\t        this.currentImageIndex = this.nextImageIndex;\n\t        this.setNextIndex(this.currentImageIndex+1);\n\t\t\tthis.updateCaption();\n\t\t},\n\t\tupdateCaption: function() {\n\t\t\tvar str = $(this.getImage(this.currentImageIndex)).attr('title');\n\t\t\tif(this.options.captions && this.captionBar)\n\t\t\t{\n\t\t\t\tif(str !== \"\")\n\t\t\t\t\tthis.captionBar.html(str);\n\t\t\t\t\t\n\t\t\t\tthis.captionBar.css('opacity', str === \"\" ? 0 : 1);\n\t\t\t}\n\t\t},\n\t\tgetImage: function(index) {\n\t\t\tindex = index % this.images.length;\n\n\t\t\treturn this.images[index];\n\t\t},\n\t\tsetNextIndex: function(nextIndex)\n\t\t{\n\t\t\tif(nextIndex == undefined)\n\t\t\t\tnextIndex = this.currentImageIndex+1;\n\n\t\t\tthis.nextImageIndex = nextIndex;\n\n\t\t\tif(this.nextImageIndex > this.images.length-1)\n\t\t\t\tthis.nextImageIndex = 0;\n\n\t\t\tif(this.nextImageIndex < 0)\n\t\t\t\tthis.nextImageIndex = this.images.length-1;\n\t\t},\n\t\tincrement: function() {\n\t\t\tthis.currentImageIndex++;\n\t\t\tif(this.currentImageIndex > this.images.length-1)\n\t\t\t\tthis.currentImageIndex = 0;\n\t\t}\n\t};\n\n\treturn flux.slider;\n});\ndefine('skylark-fluxslider/flux.transitions',[\n\t\"skylark-jquery\",\n\t\"./flux\"\n],function($,flux) {\n\t/**\n\t * Helper function for cross-browser CSS3 support, prepends all possible prefixes to all properties passed in\n\t * @param {Object} props Ker/value pairs of CSS3 properties\n\t */\n\t$.fn.css3 = function(props) {\n\t\tvar css = {};\n\t\tvar prefixes = ['webkit', 'moz', 'ms', 'o'];\n\n\t\tfor(var prop in props)\n\t\t{\n\t\t\t// Add the vendor specific versions\n\t\t\tfor(var i=0; i<prefixes.length; i++)\n\t\t\t\tcss['-'+prefixes[i]+'-'+prop] = props[prop];\n\t\t\t\n\t\t\t// Add the actual version\t\n\t\t\tcss[prop] = props[prop];\n\t\t}\n\t\t\n\t\tthis.css(css);\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * Helper function to bind to the correct transition end event\n\t * @param {function} callback The function to call when the event fires\n\t */\n\t$.fn.transitionEnd = function(callback) {\n\t\tvar _this = this;\n\t\t\n\t\tvar events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd'];\n\t\t\n\t\tfor(var i=0; i < events.length; i++)\n\t\t{\n\t\t\tthis.bind(events[i], function(event){\n\t\t\t\t// Automatically stop listening for the event\n\t\t\t\tfor(var j=0; j<events.length;j++)\n\t\t\t\t\t$(this).unbind(events[j]);\n\n\t\t\t\t// Perform the callback function\n\t\t\t\tif(callback)\n\t\t\t\t\tcallback.call(this, event);\n\t\t\t});\n\t\t}\n\t\t\n\t\treturn this;\n\t};\n\n\tflux.transition = function(fluxslider, opts) {\n\t\tthis.options = $.extend({\n\t\t\trequires3d: false,\n\t\t\tafter: function() {\n\t\t\t\t// Default callback for after the transition has completed\n\t\t\t}\n\t\t}, opts);\n\n\t\tthis.slider = fluxslider;\n\n\t\t// We need to ensure transitions degrade gracefully if the transition is unsupported or not loaded\n\t\tif((this.options.requires3d && !flux.browser.supports3d) || !flux.browser.supportsTransitions || this.options.fallback === true)\n\t\t{\n\t\t\tvar _this = this;\n\t\t\t\n\t\t\tthis.options.after = undefined;\n\n\t\t\tthis.options.setup = function() {\n\t\t\t\t//console.error(\"Fallback setup()\");\n\t\t\t\t_this.fallbackSetup();\n\t\t\t};\n\t\t\t\n\t\t\tthis.options.execute = function() {\n\t\t\t\t//console.error(\"Fallback execute()\");\n\t\t\t\t_this.fallbackExecute();\n\t\t\t};\n\t\t}\n\t};\n\n\tflux.transition.prototype = {\n\t\tconstructor: flux.transition,\n\t\thasFinished: false, // This is a lock to ensure that the fluxTransitionEnd event is only fired once per tansition\n\t\trun: function() {\n\t\t\tvar _this = this;\n\n\t\t\t// do something\n\t\t\tif(this.options.setup !== undefined)\n\t\t\t\tthis.options.setup.call(this);\n\t\t\t\n\t\t\t// Remove the background image from the top image\n\t\t\tthis.slider.image1.css({\n\t\t\t\t'background-image': 'none'\n\t\t\t});\n\n\t\t\tthis.slider.imageContainer.css('overflow', this.options.requires3d ? 'visible' : 'hidden');\n\n\t\t\t// For some of the 3D effects using Zepto we need to delay the transitions for some reason\n\t\t\tsetTimeout(function(){\n\t\t\t\tif(_this.options.execute !== undefined)\n\t\t\t\t\t_this.options.execute.call(_this);\n\t\t\t}, 5);\n\t\t},\n\t\tfinished: function() {\n\t\t\tif(this.hasFinished)\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\tthis.hasFinished = true;\n\t\t\t\n\t\t\tif(this.options.after)\n\t\t\t\tthis.options.after.call(this);\n\n\t\t\tthis.slider.imageContainer.css('overflow', 'hidden');\t\n\n\t\t\tthis.slider.setupImages();\n\n\t\t\t// Trigger an event to signal the end of a transition\n\t\t\tthis.slider.element.trigger('fluxTransitionEnd', {\n\t\t\t\tcurrentImage: this.slider.getImage(this.slider.currentImageIndex)\n\t\t\t});\n\t\t},\n\t\tfallbackSetup: function() {\n\t\t\t\n\t\t},\n\t\tfallbackExecute: function() {\n\t\t\tthis.finished();\n\t\t}\n\t};\n\n\tflux.transitions = {};\n\t\n\t// Flux grid transition\n\tflux.transition_grid = function(fluxslider, opts) {\n\t\treturn new flux.transition(fluxslider, $.extend({\n\t\t\tcolumns: 6,\n\t\t\trows: 6,\n\t\t\tforceSquare: false,\n\t\t\tsetup: function() {\n\t\t\t\tvar imgWidth = this.slider.image1.width(),\n\t\t\t\t\timgHeight = this.slider.image1.height();\n\t\t\t\t\t\n\t\t\t\tvar colWidth = Math.floor(imgWidth / this.options.columns),\n\t\t\t\t\trowHeight = Math.floor(imgHeight / this.options.rows);\n\t\t\t\t\t\n\t\t\t\tif(this.options.forceSquare)\n\t\t\t\t{\n\t\t\t\t\trowHeight = colWidth;\n\t\t\t\t\tthis.options.rows = Math.floor(imgHeight / rowHeight);\n\t\t\t\t}\n\n\t\t\t\t// Work out how much space remains with the adjusted barWidth\n\t\t\t\tvar colRemainder = imgWidth - (this.options.columns * colWidth),\n\t\t\t\t\tcolAddPerLoop = Math.ceil(colRemainder / this.options.columns),\n\t\t\t\t\t\n\t\t\t\t\trowRemainder = imgHeight - (this.options.rows * rowHeight),\n\t\t\t\t\trowAddPerLoop = Math.ceil(rowRemainder / this.options.rows),\n\t\t\t\t\t\n\t\t\t\t\tdelayBetweenBars = 150,\n\t\t\t\t\theight = this.slider.image1.height(),\n\t\t\t\t\ttotalLeft = 0,\n\t\t\t\t\ttotalTop = 0,\n\t\t\t\t\tfragment = document.createDocumentFragment();\n\t\t\t\t\n\t\t\t\tfor(var i=0; i<this.options.columns; i++) {\n\t\t\t\t\tvar thisColWidth = colWidth,\n\t\t\t\t\t\ttotalTop = 0;\n\n\t\t\t\t\tif(colRemainder > 0) {\n\t\t\t\t\t\tvar add = colRemainder >= colAddPerLoop ? colAddPerLoop : colRemainder;\n\t\t\t\t\t\tthisColWidth += add;\n\t\t\t\t\t\tcolRemainder -= add;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor(var j=0; j<this.options.rows; j++)\t{\n\t\t\t\t\t\tvar thisRowHeight = rowHeight,\n\t\t\t\t\t\t\tthisRowRemainder = rowRemainder;\n\n\t\t\t\t\t\tif(thisRowRemainder > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar add = thisRowRemainder >= rowAddPerLoop ? rowAddPerLoop : thisRowRemainder;\n\t\t\t\t\t\t\tthisRowHeight += add;\n\t\t\t\t\t\t\tthisRowRemainder -= add;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar tile = $('<div class=\"tile tile-'+i+'-'+j+'\"></div>').css({\n\t\t\t\t\t\t\twidth: thisColWidth+'px',\n\t\t\t\t\t\t\theight: thisRowHeight+'px',\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: totalTop+'px',\n\t\t\t\t\t\t\tleft: totalLeft+'px'\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.options.renderTile.call(this, tile, i, j, thisColWidth, thisRowHeight, totalLeft, totalTop);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfragment.appendChild(tile.get(0));\n\t\t\t\t\t\t\n\t\t\t\t\t\ttotalTop += thisRowHeight;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttotalLeft += thisColWidth;\n\t\t\t\t}\n\n\t\t\t\t// Append the fragement to the surface\n\t\t\t\tthis.slider.image1.get(0).appendChild(fragment);\n\t\t\t},\n\t\t\texecute: function() {\n\t\t\t\tvar _this = this,\n\t\t\t\t\theight = this.slider.image1.height(),\n\t\t\t\t\tbars = this.slider.image1.find('div.barcontainer');\n\n\t\t\t\tthis.slider.image2.hide();\n\n\t\t\t\t// Get notified when the last transition has completed\n\t\t\t\tbars.last().transitionEnd(function(event){\n\t\t\t\t\t_this.slider.image2.show();\n\n\t\t\t\t\t_this.finished();\n\t\t\t\t});\n\n\t\t\t\tbars.css3({\n\t\t\t\t\t'transform': flux.browser.rotateX(-90) + ' ' + flux.browser.translate(0, height/2, height/2)\n\t\t\t\t});\n\t\t\t},\n\t\t\trenderTile: function(elem, colIndex, rowIndex, colWidth, rowHeight, leftOffset, topOffset) {\n\t\t\t\t\n\t\t\t}\n\t\t}, opts));\t\n\t};\n});\ndefine('skylark-fluxslider/flux.transitions.bars',[\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.bars = function(fluxslider, opts) {\n\t\treturn new flux.transition_grid(fluxslider, $.extend({\n\t\t\tcolumns: 10,\n\t\t\trows: 1,\n\t\t\tdelayBetweenBars: 40,\n\t\t\trenderTile: function(elem, colIndex, rowIndex, colWidth, rowHeight, leftOffset, topOffset) {\n\t\t\t\t$(elem).css({\n\t\t\t\t\t'background-image': this.slider.image1.css('background-image'),\n\t\t\t\t\t'background-position': '-'+leftOffset+'px 0px'\n\t\t\t\t}).css3({\n\t\t\t\t\t'transition-duration': '400ms',\n\t\t\t\t\t'transition-timing-function': 'ease-in',\n\t\t\t\t\t'transition-property': 'all',\n\t\t\t\t\t'transition-delay': (colIndex*this.options.delayBetweenBars)+'ms'\n\t\t\t\t});\n\t\t\t},\n\t\t\texecute: function() {\n\t\t\t\tvar _this = this;\n\t\n\t\t\t\tvar height = this.slider.image1.height();\n\t\n\t\t\t\tvar bars = this.slider.image1.find('div.tile');\n\t\n\t\t\t\t// Get notified when the last transition has completed\n\t\t\t\t$(bars[bars.length-1]).transitionEnd(function(){\n\t\t\t\t\t_this.finished();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tbars.css({\n\t\t\t\t\t\t'opacity': '0.5'\n\t\t\t\t\t}).css3({\n\t\t\t\t\t\t'transform': flux.browser.translate(0, height)\n\t\t\t\t\t});\n\t\t\t\t}, 50);\n\t\t\t\t\n\t\t\t}\n\t\t}, opts));\n\t};\n});\ndefine('skylark-fluxslider/flux.transitions.bars3d',[\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.bars3d = function(fluxslider, opts) {\n\t\treturn new flux.transition_grid(fluxslider, $.extend({\n\t\t\trequires3d: true,\n\t\t\tcolumns: 7,\n\t\t\trows: 1,\n\t\t\tdelayBetweenBars: 150,\n\t\t\tperspective: 1000,\n\t\t\trenderTile: function(elem, colIndex, rowIndex, colWidth, rowHeight, leftOffset, topOffset) {\n\t\t\t\tvar bar = $('<div class=\"bar-'+colIndex+'\"></div>').css({\n\t\t\t\t\twidth: colWidth+'px',\n\t\t\t\t\theight: '100%',\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: '0px',\n\t\t\t\t\tleft: '0px',\n\t\t\t\t\t'z-index': 200,\n\n\t\t\t\t\t'background-image': this.slider.image1.css('background-image'),\n\t\t\t\t\t'background-position': '-'+leftOffset+'px 0px',\n\t\t\t\t\t'background-repeat': 'no-repeat'\n\t\t\t\t}).css3({\n\t\t\t\t\t'backface-visibility': 'hidden'\n\t\t\t\t}),\n\n\t\t\t\tbar2 = $(bar.get(0).cloneNode(false)).css({\n\t\t\t\t\t'background-image': this.slider.image2.css('background-image')\n\t\t\t\t}).css3({\n\t\t\t\t\t'transform': flux.browser.rotateX(90) + ' ' + flux.browser.translate(0, -rowHeight/2, rowHeight/2)\n\t\t\t\t}),\n\n\t\t\t\tleft = $('<div class=\"side bar-'+colIndex+'\"></div>').css({\n\t\t\t\t\twidth: rowHeight+'px',\n\t\t\t\t\theight: rowHeight+'px',\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: '0px',\n\t\t\t\t\tleft: '0px',\n\t\t\t\t\tbackground: '#222',\n\t\t\t\t\t'z-index': 190\n\t\t\t\t}).css3({\n\t\t\t\t\t'transform': flux.browser.rotateY(90) + ' ' + flux.browser.translate(rowHeight/2, 0, -rowHeight/2) + ' ' + flux.browser.rotateY(180),\n\t\t\t\t\t'backface-visibility': 'hidden'\n\t\t\t\t}),\n\n\t\t\t\tright = $(left.get(0).cloneNode(false)).css3({\n\t\t\t\t\t'transform': flux.browser.rotateY(90) + ' ' + flux.browser.translate(rowHeight/2, 0, colWidth-rowHeight/2)\n\t\t\t\t});\n\n\t\t\t\t$(elem).css({\n\t\t\t\t\twidth: colWidth+'px',\n\t\t\t\t\theight: '100%',\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: '0px',\n\t\t\t\t\tleft: leftOffset+'px',\n\t\t\t\t\t'z-index': colIndex > this.options.columns/2 ? 1000-colIndex : 1000 // Fix for Chrome to ensure that the z-index layering is correct!\n\t\t\t\t}).css3({\n\t\t\t\t\t'transition-duration': '800ms',\n\t\t\t\t\t'transition-timing-function': 'linear',\n\t\t\t\t\t'transition-property': 'all',\n\t\t\t\t\t'transition-delay': (colIndex*this.options.delayBetweenBars)+'ms',\n\t\t\t\t\t'transform-style': 'preserve-3d'\n\t\t\t\t}).append(bar).append(bar2).append(left).append(right);\n\t\t\t},\n\t\t\texecute: function() {\n\t\t\t\tthis.slider.image1.css3({\n\t\t\t\t\t'perspective': this.options.perspective,\n\t\t\t\t\t'perspective-origin': '50% 50%'\n\t\t\t\t}).css({\n\t\t\t\t\t'-moz-transform': 'perspective('+this.options.perspective+'px)',\n\t\t\t\t\t'-moz-perspective': 'none',\n\t\t\t\t\t'-moz-transform-style': 'preserve-3d'\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tvar _this = this,\n\t\t\t\t\theight = this.slider.image1.height(),\n\t\t\t\t\tbars = this.slider.image1.find('div.tile');\n\n\t\t\t\tthis.slider.image2.hide();\n\n\t\t\t\t// Get notified when the last transition has completed\n\t\t\t\tbars.last().transitionEnd(function(event){\n\t\t\t\t\t_this.slider.image1.css3({\n\t\t\t\t\t\t'transform-style': 'flat'\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t_this.slider.image2.show();\n\n\t\t\t\t\t_this.finished();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tbars.css3({\n\t\t\t\t\t\t'transform': flux.browser.rotateX(-90) + ' ' + flux.browser.translate(0, height/2, height/2)\n\t\t\t\t\t});\n\t\t\t\t}, 50);\n\t\t\t}\n\t\t}, opts));\n\t};\n});\ndefine('skylark-fluxslider/flux.transitions.blinds',[\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.blinds = function(fluxslider, opts) {\n\t\treturn new flux.transitions.bars(fluxslider, $.extend({\n\t\t\texecute: function() {\n\t\t\t\tvar _this = this;\n\n\t\t\t\tvar height = this.slider.image1.height();\n\n\t\t\t\tvar bars = this.slider.image1.find('div.tile');\n\n\t\t\t\t// Get notified when the last transition has completed\n\t\t\t\t$(bars[bars.length-1]).transitionEnd(function(){\n\t\t\t\t\t_this.finished();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tbars.css({\n\t\t\t\t\t\t'opacity': '0.5'\n\t\t\t\t\t}).css3({\n\t\t\t\t\t\t'transform': 'scalex(0.0001)'\n\t\t\t\t\t});\n\t\t\t\t}, 50);\n\t\t\t}\n\t\t}, opts));\n\t}\n});\ndefine('skylark-fluxslider/flux.transitions.blinds3d',[\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.blinds3d = function(fluxslider, opts) {\n\t\treturn new flux.transitions.tiles3d(fluxslider, $.extend({\n\t\t\tforceSquare: false,\n\t\t\trows: 1,\n\t\t\tcolumns: 6\n\t\t}, opts));\n\t};\n});\ndefine('skylark-fluxslider/flux.transitions.blocks',[\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.blocks = function(fluxslider, opts) {\n\t\treturn new flux.transition_grid(fluxslider, $.extend({\n\t\t\tforceSquare: true,\n\t\t\tdelayBetweenBars: 100,\n\t\t\trenderTile: function(elem, colIndex, rowIndex, colWidth, rowHeight, leftOffset, topOffset) {\n\t\t\t\tvar delay = Math.floor(Math.random()*10*this.options.delayBetweenBars);\n\t\t\t\t\n\t\t\t\t$(elem).css({\n\t\t\t\t\t'background-image': this.slider.image1.css('background-image'),\n\t\t\t\t\t'background-position': '-'+leftOffset+'px -'+topOffset+'px'\n\t\t\t\t}).css3({\n\t\t\t\t\t'transition-duration': '350ms',\n\t\t\t\t\t'transition-timing-function': 'ease-in',\n\t\t\t\t\t'transition-property': 'all',\n\t\t\t\t\t'transition-delay': delay+'ms'\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Keep track of the last elem to fire\n\t\t\t\tif(this.maxDelay === undefined)\n\t\t\t\t\tthis.maxDelay = 0;\n\t\t\t\t\t\n\t\t\t\tif(delay > this.maxDelay)\n\t\t\t\t{\n\t\t\t\t\tthis.maxDelay = delay;\n\t\t\t\t\tthis.maxDelayTile = elem;\n\t\t\t\t}\n\t\t\t},\n\t\t\texecute: function() {\n\t\t\t\tvar _this = this;\n\t\n\t\t\t\tvar blocks = this.slider.image1.find('div.tile');\n\t\n\t\t\t\t// Get notified when the last transition has completed\n\t\t\t\tthis.maxDelayTile.transitionEnd(function(){\n\t\t\t\t\t_this.finished();\n\t\t\t\t});\n\t\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tblocks.each(function(index, block){\t\t\t\t\n\t\t\t\t\t\t$(block).css({\n\t\t\t\t\t\t\t'opacity': '0'\n\t\t\t\t\t\t}).css3({\n\t\t\t\t\t\t\t'transform': 'scale(0.8)'\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}, 50);\n\t\t\t}\n\t\t}, opts));\n\t};\n});\ndefine('skylark-fluxslider/flux.transitions.blocks2',[\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.blocks2 = function(fluxslider, opts) {\n\t\treturn new flux.transition_grid(fluxslider, $.extend({\n\t\t\tcols: 12,\n\t\t\tforceSquare: true,\n\t\t\tdelayBetweenDiagnols: 150,\n\t\t\trenderTile: function(elem, colIndex, rowIndex, colWidth, rowHeight, leftOffset, topOffset) {\n\t\t\t\tvar delay = Math.floor(Math.random()*10*this.options.delayBetweenBars);\n\t\t\t\t\n\t\t\t\t$(elem).css({\n\t\t\t\t\t'background-image': this.slider.image1.css('background-image'),\n\t\t\t\t\t'background-position': '-'+leftOffset+'px -'+topOffset+'px'\n\t\t\t\t}).css3({\n\t\t\t\t\t'transition-duration': '350ms',\n\t\t\t\t\t'transition-timing-function': 'ease-in',\n\t\t\t\t\t'transition-property': 'all',\n\t\t\t\t\t'transition-delay': (colIndex+rowIndex)*this.options.delayBetweenDiagnols+'ms',\n\t\t\t\t\t'backface-visibility': 'hidden' // trigger hardware acceleration\n\t\t\t\t});\n\t\t\t},\n\t\t\texecute: function() {\n\t\t\t\tvar _this = this;\n\t\n\t\t\t\tvar blocks = this.slider.image1.find('div.tile');\n\t\n\t\t\t\t// Get notified when the last transition has completed\n\t\t\t\tblocks.last().transitionEnd(function(){\n\t\t\t\t\t_this.finished();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tblocks.each(function(index, block){\t\t\t\t\n\t\t\t\t\t\t$(block).css({\n\t\t\t\t\t\t\t'opacity': '0'\n\t\t\t\t\t\t}).css3({\n\t\t\t\t\t\t\t'transform': 'scale(0.8)'\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}, 50);\n\t\t\t}\n\t\t}, opts));\n\t};\n});\ndefine('skylark-fluxslider/flux.transitions.concentric',[\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.concentric = function(fluxslider, opts) {\n\t\treturn new flux.transition(fluxslider, $.extend({\n\t\t\tblockSize: 60,\n\t\t\tdelay: 150,\n\t\t\talternate: false,\n\t\t\tsetup: function() {\n\t\t\t\tvar w = this.slider.image1.width(),\n\t\t\t\t\th = this.slider.image1.height(),\n\t\t\t\t\tlargestLength = Math.sqrt(w*w + h*h), // Largest length is the diagonal\n\n\t\t\t\t\t// How many blocks do we need?\n\t\t\t\t\tblockCount = Math.ceil(((largestLength-this.options.blockSize)/2) / this.options.blockSize) + 1, // 1 extra to account for the round border\n\t\t\t\t\tfragment = document.createDocumentFragment();\n\n\t\t\t\tfor(var i=0; i<blockCount; i++)\n\t\t\t\t{\n\t\t\t\t\tvar thisBlockSize = (2*i*this.options.blockSize)+this.options.blockSize;\n\n\t\t\t\t\tvar block = $('<div></div>').attr('class', 'block block-'+i).css({\n\t\t\t\t\t\twidth: thisBlockSize+'px',\n\t\t\t\t\t\theight: thisBlockSize+'px',\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: ((h-thisBlockSize)/2)+'px',\n\t\t\t\t\t\tleft: ((w-thisBlockSize)/2)+'px',\n\n\t\t\t\t\t\t'z-index': 100+(blockCount-i),\n\n\t\t\t\t\t\t'background-image': this.slider.image1.css('background-image'),\n\t\t\t\t\t\t'background-position': 'center center'\n\t\t\t\t\t}).css3({\n\t\t\t\t\t\t'border-radius': thisBlockSize+'px',\n\t\t\t\t\t\t'transition-duration': '800ms',\n\t\t\t\t\t\t'transition-timing-function': 'linear',\n\t\t\t\t\t\t'transition-property': 'all',\n\t\t\t\t\t\t'transition-delay': ((blockCount-i)*this.options.delay)+'ms'\n\t\t\t\t\t});\n\n\t\t\t\t\tfragment.appendChild(block.get(0));\n\t\t\t\t}\n\n\t\t\t\t//this.slider.image1.append($(fragment));\n\t\t\t\tthis.slider.image1.get(0).appendChild(fragment);\n\t\t\t},\n\t\t\texecute: function() {\n\t\t\t\tvar _this = this;\n\n\t\t\t\tvar blocks = this.slider.image1.find('div.block');\n\n\t\t\t\t// Get notified when the last transition has completed\n\t\t\t\t$(blocks[0]).transitionEnd(function(){\n\t\t\t\t\t_this.finished();\n\t\t\t\t});\n\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tblocks.each(function(index, block){\n\t\t\t\t\t\t$(block).css({\n\t\t\t\t\t\t\t'opacity': '0'\n\t\t\t\t\t\t}).css3({\n\t\t\t\t\t\t\t'transform': flux.browser.rotateZ((!_this.options.alternate || index%2 ? '' : '-')+'90')\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}, 50);\n\t\t\t}\n\t\t}, opts));\n\t};\n});\ndefine('skylark-fluxslider/flux.transitions.cube',[\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.cube = function(fluxslider, opts) {\n\t\treturn new flux.transition(fluxslider, $.extend({\n\t\t\trequires3d: true,\n\t\t\tbarWidth: 100,\n\t\t\tdirection: 'left',\n\t\t\tperspective: 1000,\n\t\t\tsetup: function() {\n\t\t\t\tvar width = this.slider.image1.width();\n\t\t\t\tvar height = this.slider.image1.height();\n\n\t\t\t\t// Setup the container to allow 3D perspective\n\n\t\t\t\tthis.slider.image1.css3({\n\t\t\t\t\t'perspective': this.options.perspective,\n\t\t\t\t\t'perspective-origin': '50% 50%'\n\t\t\t\t});\n\n\t\t\t\tthis.cubeContainer = $('<div class=\"cube\"></div>').css({\n\t\t\t\t\twidth: width+'px',\n\t\t\t\t\theight: height+'px',\n\t\t\t\t\tposition: 'relative'\n\t\t\t\t}).css3({\n\t\t\t\t\t'transition-duration': '800ms',\n\t\t\t\t\t'transition-timing-function': 'linear',\n\t\t\t\t\t'transition-property': 'all',\n\t\t\t\t\t'transform-style': 'preserve-3d'\n\t\t\t\t});\n\n\t\t\t\tvar css = {\n\t\t\t\t\theight: '100%',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: '0px',\n\t\t\t\t\tleft: '0px'\n\t\t\t\t};\n\n\t\t\t\tvar currentFace = $('<div class=\"face current\"></div>').css($.extend(css, {\n\t\t\t\t\tbackground: this.slider.image1.css('background-image')\n\t\t\t\t})).css3({\n\t\t\t\t\t'backface-visibility': 'hidden'\n\t\t\t\t});\n\n\t\t\t\tthis.cubeContainer.append(currentFace);\n\n\t\t\t\tvar nextFace = $('<div class=\"face next\"></div>').css($.extend(css, {\n\t\t\t\t\tbackground: this.slider.image2.css('background-image')\n\t\t\t\t})).css3({\n\t\t\t\t\t'transform' : this.options.transitionStrings.call(this, this.options.direction, 'nextFace'),\n\t\t\t\t\t'backface-visibility': 'hidden'\n\t\t\t\t});\n\n\t\t\t\tthis.cubeContainer.append(nextFace);\n\n\t\t\t\tthis.slider.image1.append(this.cubeContainer);\n\t\t\t},\n\t\t\texecute: function() {\n\t\t\t\tvar _this = this;\n\n\t\t\t\tvar width = this.slider.image1.width();\n\t\t\t\tvar height = this.slider.image1.height();\n\n\t\t\t\tthis.slider.image2.hide();\n\t\t\t\tthis.cubeContainer.transitionEnd(function(){\n\t\t\t\t\t_this.slider.image2.show();\n\n\t\t\t\t\t_this.finished();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t_this.cubeContainer.css3({\n\t\t\t\t\t\t'transform' : _this.options.transitionStrings.call(_this, _this.options.direction, 'container')\n\t\t\t\t\t});\n\t\t\t\t}, 50);\n\t\t\t},\n\t\t\ttransitionStrings: function(direction, elem) {\n\t\t\t\tvar width = this.slider.image1.width();\n\t\t\t\tvar height = this.slider.image1.height();\n\n\t\t\t\t// Define the various transforms that are required to perform various cube rotations\n\t\t\t\tvar t = {\n\t\t\t\t\t'up' : {\n\t\t\t\t\t\t'nextFace': flux.browser.rotateX(-90) + ' ' + flux.browser.translate(0, height/2, height/2),\n\t\t\t\t\t\t'container': flux.browser.rotateX(90) + ' ' + flux.browser.translate(0, -height/2, height/2)\n\t\t\t\t\t},\n\t\t\t\t\t'down' : {\n\t\t\t\t\t\t'nextFace': flux.browser.rotateX(90) + ' ' + flux.browser.translate(0, -height/2, height/2),\n\t\t\t\t\t\t'container': flux.browser.rotateX(-90) + ' ' + flux.browser.translate(0, height/2, height/2)\n\t\t\t\t\t},\n\t\t\t\t\t'left' : {\n\t\t\t\t\t\t'nextFace': flux.browser.rotateY(90) + ' ' + flux.browser.translate(width/2, 0, width/2),\n\t\t\t\t\t\t'container': flux.browser.rotateY(-90) + ' ' + flux.browser.translate(-width/2, 0, width/2)\n\t\t\t\t\t},\n\t\t\t\t\t'right' : {\n\t\t\t\t\t\t'nextFace': flux.browser.rotateY(-90) + ' ' + flux.browser.translate(-width/2, 0, width/2),\n\t\t\t\t\t\t'container': flux.browser.rotateY(90) + ' ' + flux.browser.translate(width/2, 0, width/2)\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\treturn (t[direction] && t[direction][elem]) ? t[direction][elem] : false;\n\t\t\t}\n\t\t}, opts));\t\n\t};\n});\ndefine('skylark-fluxslider/flux.transitions.dissolve',[\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.dissolve = function(fluxslider, opts) {\n\t\treturn new flux.transition(fluxslider, $.extend({\n\t\t\tsetup: function() {\n\t\t\t\tvar img = $('<div class=\"image\"></div>').css({\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\theight: '100%',\n\t\t\t\t\t'background-image': this.slider.image1.css('background-image')\t\n\t\t\t\t}).css3({\n\t\t\t\t\t'transition-duration': '600ms',\n\t\t\t\t\t'transition-timing-function': 'ease-in',\n\t\t\t\t\t'transition-property': 'opacity'\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tthis.slider.image1.append(img);\n\t\t\t},\n\t\t\texecute: function() {\n\t\t\t\tvar _this = this,\n\t\t\t\t\timg = this.slider.image1.find('div.image');\n\n\t\t\t\t// Get notified when the last transition has completed\n\t\t\t\t$(img).transitionEnd(function(){\n\t\t\t\t\t_this.finished();\n\t\t\t\t});\n\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t$(img).css({\n\t\t\t\t\t\t'opacity': '0.0'\n\t\t\t\t\t});\n\t\t\t\t}, 50);\n\t\t\t}\n\t\t}, opts));\n\t};\n});\ndefine('skylark-fluxslider/flux.transitions.explode',[\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.explode = function(fluxslider, opts) {\n\t\treturn new flux.transition_grid(fluxslider, $.extend({\n\t\t\tcolumns: 6,\n\t\t\tforceSquare: true,\n\t\t\tdelayBetweenBars: 30,\n\t\t\tperspective: 800,\n\t\t\trequires3d: true,\n\t\t\trenderTile: function(elem, colIndex, rowIndex, colWidth, rowHeight, leftOffset, topOffset) {\n\t\t\t\tvar delay = Math.floor(Math.random()*10*this.options.delayBetweenBars);\n\t\t\t\t\n\t\t\t\t$(elem).css({\n\t\t\t\t\t'background-image': this.slider.image1.css('background-image'),\n\t\t\t\t\t'background-position': '-'+leftOffset+'px -'+topOffset+'px'\n\t\t\t\t}).css3({\n\t\t\t\t\t'transition-duration': '500ms',\n\t\t\t\t\t'transition-timing-function': 'ease-in',\n\t\t\t\t\t'transition-property': 'all',\n\t\t\t\t\t'transition-delay': delay+'ms'\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Keep track of the last elem to fire\n\t\t\t\tif(this.maxDelay === undefined)\n\t\t\t\t\tthis.maxDelay = 0;\n\t\t\t\t\t\n\t\t\t\tif(delay > this.maxDelay)\n\t\t\t\t{\n\t\t\t\t\tthis.maxDelay = delay;\n\t\t\t\t\tthis.maxDelayTile = elem;\n\t\t\t\t}\n\t\t\t},\n\t\t\texecute: function() {\n\t\t\t\tthis.slider.image1.css3({\n\t\t\t\t\t'perspective': this.options.perspective,\n\t\t\t\t\t'perspective-origin': '50% 50%'\n\t\t\t\t}).css({\n\t\t\t\t\t'-moz-transform': 'perspective('+this.options.perspective+'px)',\n\t\t\t\t\t'-moz-perspective': 'none',\n\t\t\t\t\t'-moz-transform-style': 'preserve-3d'\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tvar _this = this;\n\t\n\t\t\t\tvar blocks = this.slider.image1.find('div.tile');\n\t\n\t\t\t\t// Get notified when the last transition has completed\n\t\t\t\tthis.maxDelayTile.transitionEnd(function(){\n\t\t\t\t\t_this.slider.image1.css3({\n\t\t\t\t\t\t'transform-style': 'flat'\n\t\t\t\t\t});\n\t\t\t\t\t_this.finished();\n\t\t\t\t});\n\t\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tblocks.each(function(index, block){\t\t\t\t\n\t\t\t\t\t\t$(block).css({\n\t\t\t\t\t\t\t'opacity': '0'\n\t\t\t\t\t\t}).css3({\n\t\t\t\t\t\t\t'transform': flux.browser.translate(0, 0, 700) + \" rotate3d(\"+(Math.round(Math.random()*2)-1)+\", \"+(Math.round(Math.random()*2)-1)+\", \"+(Math.round(Math.random()*2)-1)+\", 90deg) \"\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}, 50);\n\t\t\t}\n\t\t}, opts));\n\t};\n});\ndefine('skylark-fluxslider/flux.transitions.slide',[\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.slide = function(fluxslider, opts) {\n\t\treturn new flux.transition(fluxslider, $.extend({\n\t\t\tdirection: 'left',\n\t\t\tsetup: function() {\n\t\t\t\tvar width = this.slider.image1.width(),\n\t\t\t\t\theight = this.slider.image1.height(),\n\n\t\t\t\tcurrentImage = $('<div class=\"current\"></div>').css({\n\t\t\t\t\theight: height+'px',\n\t\t\t\t\twidth: width+'px',\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: '0px',\n\t\t\t\t\tleft: '0px',\n\t\t\t\t\tbackground: this.slider[this.options.direction == 'left' ? 'image1' : 'image2'].css('background-image')\t\n\t\t\t\t}).css3({\n\t\t\t\t\t'backface-visibility': 'hidden'\n\t\t\t\t}),\n\n\t\t\t\tnextImage = $('<div class=\"next\"></div>').css({\n\t\t\t\t\theight: height+'px',\n\t\t\t\t\twidth: width+'px',\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: '0px',\n\t\t\t\t\tleft: width+'px',\n\t\t\t\t\tbackground: this.slider[this.options.direction == 'left' ? 'image2' : 'image1'].css('background-image')\n\t\t\t\t}).css3({\n\t\t\t\t\t'backface-visibility': 'hidden'\n\t\t\t\t});\n\n\t\t\t\tthis.slideContainer = $('<div class=\"slide\"></div>').css({\n\t\t\t\t\twidth: (2*width)+'px',\n\t\t\t\t\theight: height+'px',\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tleft: this.options.direction == 'left' ? '0px' : -width+'px',\n\t\t\t\t\t'z-index': 101\n\t\t\t\t}).css3({\n\t\t\t\t\t'transition-duration': '600ms',\n\t\t\t\t\t'transition-timing-function': 'ease-in',\n\t\t\t\t\t'transition-property': 'all'\n\t\t\t\t});\n\n\t\t\t\tthis.slideContainer.append(currentImage).append(nextImage);\n\n\t\t\t\tthis.slider.image1.append(this.slideContainer);\n\t\t\t},\n\t\t\texecute: function() {\n\t\t\t\tvar _this = this,\n\t\t\t\t\tdelta = this.slider.image1.width();\n\n\t\t\t\tif(this.options.direction == 'left')\n\t\t\t\t\tdelta = -delta;\n\n\t\t\t\tthis.slideContainer.transitionEnd(function(){\n\t\t\t\t\t_this.finished();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t_this.slideContainer.css3({\n\t\t\t\t\t\t'transform' : flux.browser.translate(delta)\n\t\t\t\t\t});\n\t\t\t\t}, 50);\n\t\t\t}\n\t\t}, opts));\t\n\t};\n});\ndefine('skylark-fluxslider/flux.transitions.swipe',[\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.swipe = function(fluxslider, opts) {\n\t\treturn new flux.transition(fluxslider, $.extend({\n\t\t\tsetup: function() {\n\t\t\t\tvar img = $('<div></div>').css({\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\theight: '100%',\n\t\t\t\t\t'background-image': this.slider.image1.css('background-image')\n\t\t\t\t}).css3({\n\t\t\t\t\t'transition-duration': '1600ms',\n\t\t\t\t\t'transition-timing-function': 'ease-in',\n\t\t\t\t\t'transition-property': 'all',\n\t\t\t\t\t'mask-image': '-webkit-linear-gradient(left, rgba(0,0,0,0) 0%, rgba(0,0,0,0) 48%, rgba(0,0,0,1) 52%, rgba(0,0,0,1) 100%)',\n\t\t\t\t\t'mask-position': '70%',\n\t\t\t\t\t'mask-size': '400%'\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tthis.slider.image1.append(img);\n\t\t\t},\n\t\t\texecute: function() {\n\t\t\t\t//return;\n\t\t\t\tvar _this = this,\n\t\t\t\t\timg = this.slider.image1.find('div');\n\n\t\t\t\t// Get notified when the last transition has completed\n\t\t\t\t$(img).transitionEnd(function(){\n\t\t\t\t\t_this.finished();\n\t\t\t\t});\n\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t$(img).css3({\n\t\t\t\t\t\t'mask-position': '30%'\n\t\t\t\t\t});\n\t\t\t\t}, 50);\n\t\t\t},\n\t\t\tcompatibilityCheck: function() {\n\t\t\t\treturn flux.browser.supportsCSSProperty('MaskImage');\n\t\t\t}\n\t\t}, opts));\n\t};\n});\ndefine('skylark-fluxslider/flux.transitions.tiles3d',[\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.tiles3d = function(fluxslider, opts) {\n\t\treturn new flux.transition_grid(fluxslider, $.extend({\n\t\t\trequires3d: true,\n\t\t\tforceSquare: true,\n\t\t\tcolumns: 5,\n\t\t\tperspective: 600,\n\t\t\tdelayBetweenBarsX: 200,\n\t\t\tdelayBetweenBarsY: 150,\n\t\t\trenderTile: function(elem, colIndex, rowIndex, colWidth, rowHeight, leftOffset, topOffset) {\n\t\t\t\tvar tile = $('<div></div>').css({\n\t\t\t\t\twidth: colWidth+'px',\n\t\t\t\t\theight: rowHeight+'px',\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: '0px',\n\t\t\t\t\tleft: '0px',\n\t\t\t\t\t//'z-index': 200, // Removed to make compatible with FF10 (Chrome bug seems to have been fixed)\n\n\t\t\t\t\t'background-image': this.slider.image1.css('background-image'),\n\t\t\t\t\t'background-position': '-'+leftOffset+'px -'+topOffset+'px',\n\t\t\t\t\t'background-repeat': 'no-repeat',\n\t\t\t\t\t'-moz-transform': 'translateZ(1px)'\n\t\t\t\t}).css3({\n\t\t\t\t\t'backface-visibility': 'hidden'\n\t\t\t\t});\n\n\t\t\t\tvar tile2 = $(tile.get(0).cloneNode(false)).css({\n\t\t\t\t\t'background-image': this.slider.image2.css('background-image')\n\t\t\t\t\t//'z-index': 190 // Removed to make compatible with FF10 (Chrome bug seems to have been fixed)\n\t\t\t\t}).css3({\n\t\t\t\t\t'transform': flux.browser.rotateY(180),\n\t\t\t\t\t'backface-visibility': 'hidden'\n\t\t\t\t});\n\n\t\t\t\t$(elem).css({\n\t\t\t\t\t'z-index': (colIndex > this.options.columns/2 ? 500-colIndex : 500) + (rowIndex > this.options.rows/2 ? 500-rowIndex : 500) // Fix for Chrome to ensure that the z-index layering is correct!\n\t\t\t\t}).css3({\n\t\t\t\t\t'transition-duration': '800ms',\n\t\t\t\t\t'transition-timing-function': 'ease-out',\n\t\t\t\t\t'transition-property': 'all',\n\t\t\t\t\t'transition-delay': (colIndex*this.options.delayBetweenBarsX+rowIndex*this.options.delayBetweenBarsY)+'ms',\n\t\t\t\t\t'transform-style': 'preserve-3d'\n\t\t\t\t}).append(tile).append(tile2);\n\t\t\t},\n\t\t\texecute: function() {\n\t\t\t\tthis.slider.image1.css3({\n\t\t\t\t\t'perspective': this.options.perspective,\n\t\t\t\t\t'perspective-origin': '50% 50%'\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tvar _this = this;\n\n\t\t\t\tvar tiles = this.slider.image1.find('div.tile');\n\n\t\t\t\tthis.slider.image2.hide();\n\n\t\t\t\t// Get notified when the last transition has completed\n\t\t\t\ttiles.last().transitionEnd(function(event){\n\t\t\t\t\t_this.slider.image2.show();\n\n\t\t\t\t\t_this.finished();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\ttiles.css3({\n\t\t\t\t\t\t'transform': flux.browser.rotateY(180)\n\t\t\t\t\t});\n\t\t\t\t}, 50);\n\t\t\t}\n\t\t}, opts));\n\t};\n});\ndefine('skylark-fluxslider/flux.transitions.turn',[\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.turn = function(fluxslider, opts) {\n\t\treturn new flux.transition(fluxslider, $.extend({\n\t\t\trequires3d: true,\n\t\t\tperspective: 1300,\n\t\t\tdirection: 'left',\n\t\t\tsetup: function() {\t\t\t\t\n\t\t\t\tvar tab = $('<div class=\"tab\"></div>').css({\n\t\t\t\t\t\twidth: '50%',\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: '0px',\n\t\t\t\t\t\tleft: this.options.direction == 'left' ? '50%' : '0%',\n\t\t\t\t\t\t'z-index':101\n\t\t\t\t\t}).css3({\n\t\t\t\t\t\t'transform-style': 'preserve-3d',\n\t\t\t\t\t\t'transition-duration': '1000ms',\n\t\t\t\t\t\t'transition-timing-function': 'ease-out',\n\t\t\t\t\t\t'transition-property': 'all',\n\t\t\t\t\t\t'transform-origin': this.options.direction == 'left' ? 'left center' : 'right center'\n\t\t\t\t\t}),\n\n\t\t\t\tfront = $('<div></div>').appendTo(tab).css({\n\t\t\t\t\t\t'background-image': this.slider.image1.css('background-image'),\n\t\t\t\t\t\t'background-position': (this.options.direction == 'left' ? '-'+(this.slider.image1.width()/2) : 0)+'px 0',\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: '0',\n\t\t\t\t\t\tleft: '0',\n\t\t\t\t\t\t'-moz-transform': 'translateZ(1px)'\n\t\t\t\t\t}).css3({\n\t\t\t\t\t\t'backface-visibility': 'hidden'\n\t\t\t\t\t}),\n\n\t\t\t\tback = $('<div></div>').appendTo(tab).css({\n\t\t\t\t\t\t'background-image': this.slider.image2.css('background-image'),\n\t\t\t\t\t\t'background-position': (this.options.direction == 'left' ? 0 : '-'+(this.slider.image1.width()/2))+'px 0',\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: '0',\n\t\t\t\t\t\tleft: '0'\n\t\t\t\t\t}).css3({\n\t\t\t\t\t\ttransform: flux.browser.rotateY(180),\n\t\t\t\t\t\t'backface-visibility': 'hidden'\n\t\t\t\t\t}),\n\n\t\t\t\tcurrent = $('<div></div>').css({\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: '0',\n\t\t\t\t\tleft: this.options.direction == 'left' ? '0' : '50%',\n\t\t\t\t\twidth: '50%',\n\t\t\t\t\theight: '100%',\n\t\t\t\t\t'background-image': this.slider.image1.css('background-image'),\n\t\t\t\t\t'background-position': (this.options.direction == 'left' ? 0 : '-'+(this.slider.image1.width()/2))+'px 0',\n\t\t\t\t\t'z-index':100\n\t\t\t\t}),\n\n\t\t\t\toverlay = $('<div class=\"overlay\"></div>').css({\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: '0',\n\t\t\t\t\tleft: this.options.direction == 'left' ? '50%' : '0',\n\t\t\t\t\twidth: '50%',\n\t\t\t\t\theight: '100%',\n\t\t\t\t\tbackground: '#000',\n\t\t\t\t\topacity: 1\n\t\t\t\t}).css3({\n\t\t\t\t\t'transition-duration': '800ms',\n\t\t\t\t\t'transition-timing-function': 'linear',\n\t\t\t\t\t'transition-property': 'opacity'\n\t\t\t\t}),\n\n\t\t\t\tcontainer = $('<div></div>').css3({\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\theight: '100%'\n\t\t\t\t}).css3({\n\t\t\t\t\t'perspective': this.options.perspective,\n\t\t\t\t\t'perspective-origin': '50% 50%'\n\t\t\t\t}).append(tab).append(current).append(overlay);\n\n\t\t\t\tthis.slider.image1.append(container);\n\t\t\t},\n\t\t\texecute: function() {\n\t\t\t\tvar _this = this;\n\n\t\t\t\tthis.slider.image1.find('div.tab').first().transitionEnd(function(){\n\t\t\t\t\t_this.finished();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t_this.slider.image1.find('div.tab').css3({\n\t\t\t\t\t\t// 179 not 180 so that the tab rotates the correct way in Firefox\n\t\t\t\t\t\ttransform: flux.browser.rotateY(_this.options.direction == 'left' ? -179 : 179)\n\t\t\t\t\t});\n\t\t\t\t\t_this.slider.image1.find('div.overlay').css({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t});\n\t\t\t\t}, 50);\n\t\t\t}\n\t\t}, opts));\n\t};\n});\ndefine('skylark-fluxslider/flux.transitions.warp',[\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.warp = function(fluxslider, opts) {\n\t\treturn new flux.transitions.concentric(fluxslider, $.extend({\n\t\t\tdelay: 30,\n\t\t\talternate: true\n\t\t}, opts));\n\t};\n});\ndefine('skylark-fluxslider/flux.transitions.zip',[\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.zip = function(fluxslider, opts) {\n\t\treturn new flux.transitions.bars(fluxslider, $.extend({\n\t\t\texecute: function() {\n\t\t\t\tvar _this = this;\n\n\t\t\t\tvar height = this.slider.image1.height();\n\n\t\t\t\tvar bars = this.slider.image1.find('div.tile');\n\n\t\t\t\t// Get notified when the last transition has completed\n\t\t\t\t$(bars[bars.length-1]).transitionEnd(function(){\n\t\t\t\t\t_this.finished();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tbars.each(function(index, bar){\t\t\t\t\t\t\n\t\t\t\t\t\t$(bar).css({\n\t\t\t\t\t\t\t'opacity': '0.3'\n\t\t\t\t\t\t}).css3({\n\t\t\t\t\t\t\t'transform': flux.browser.translate(0, (index%2 ? '-'+(2*height) : height))\n\t\t\t\t\t\t});\t\t\n\t\t\t\t\t});\n\t\t\t\t}, 20);\n\t\t\t}\n\t\t}, opts));\n\t};\n});\ndefine('skylark-fluxslider/main',[\r\n\t\"./flux\",\r\n\t\"./flux.browser\",\r\n\t\"./flux.slider\",\r\n\t\"./flux.transitions\",\r\n\t\"./flux.transitions.bars\",\r\n\t\"./flux.transitions.bars3d\",\r\n\t\"./flux.transitions.blinds\",\r\n\t\"./flux.transitions.blinds3d\",\r\n\t\"./flux.transitions.blocks\",\r\n\t\"./flux.transitions.blocks2\",\r\n\t\"./flux.transitions.concentric\",\r\n\t\"./flux.transitions.cube\",\r\n\t\"./flux.transitions.dissolve\",\r\n\t\"./flux.transitions.explode\",\r\n\t\"./flux.transitions.slide\",\r\n\t\"./flux.transitions.swipe\",\r\n\t\"./flux.transitions.tiles3d\",\r\n\t\"./flux.transitions.turn\",\r\n\t\"./flux.transitions.warp\",\r\n\t\"./flux.transitions.zip\"\r\n],function(flux){\r\n\treturn flux;\r\n});\ndefine('skylark-fluxslider', ['skylark-fluxslider/main'], function (main) { return main; });\n\n"]}