{"version":3,"sources":["flux.transitions.concentric.js"],"names":["define","$","flux","transitions","concentric","fluxslider","opts","transition","extend","blockSize","delay","alternate","setup","w","this","slider","image1","width","h","height","largestLength","Math","sqrt","blockCount","ceil","options","fragment","document","createDocumentFragment","i","thisBlockSize","block","attr","css","position","top","left","z-index","background-image","background-position","css3","border-radius","transition-duration","transition-timing-function","transition-property","transition-delay","appendChild","get","execute","_this","blocks","find","transitionEnd","finished","setTimeout","each","index","opacity","transform","browser","rotateZ"],"mappings":";;;;;;;AAAAA,QACC,iBACA,SACA,sBACC,SAASC,EAAEC,GACZA,EAAKC,YAAYC,WAAa,SAASC,EAAYC,GAClD,OAAO,IAAIJ,EAAKK,WAAWF,EAAYJ,EAAEO,QACxCC,UAAW,GACXC,MAAO,IACPC,WAAW,EACXC,MAAO,WASN,IARA,IAAIC,EAAIC,KAAKC,OAAOC,OAAOC,QAC1BC,EAAIJ,KAAKC,OAAOC,OAAOG,SACvBC,EAAgBC,KAAKC,KAAKT,EAAEA,EAAIK,EAAEA,GAGlCK,EAAaF,KAAKG,MAAOJ,EAAcN,KAAKW,QAAQhB,WAAW,EAAKK,KAAKW,QAAQhB,WAAa,EAC9FiB,EAAWC,SAASC,yBAEbC,EAAE,EAAGA,EAAEN,EAAYM,IAC3B,CACC,IAAIC,EAAiB,EAAED,EAAEf,KAAKW,QAAQhB,UAAWK,KAAKW,QAAQhB,UAE1DsB,EAAQ9B,EAAE,eAAe+B,KAAK,QAAS,eAAeH,GAAGI,KAC5DhB,MAAOa,EAAc,KACrBX,OAAQW,EAAc,KACtBI,SAAU,WACVC,KAAOjB,EAAEY,GAAe,EAAG,KAC3BM,MAAQvB,EAAEiB,GAAe,EAAG,KAE5BO,UAAgBd,EAAWM,EAAhB,IAEXS,mBAAoBxB,KAAKC,OAAOC,OAAOiB,IAAI,oBAC3CM,sBAAuB,kBACrBC,MACFC,gBAAiBX,EAAc,KAC/BY,sBAAuB,QACvBC,6BAA8B,SAC9BC,sBAAuB,MACvBC,oBAAsBtB,EAAWM,GAAGf,KAAKW,QAAQf,MAAO,OAGzDgB,EAASoB,YAAYf,EAAMgB,IAAI,IAIhCjC,KAAKC,OAAOC,OAAO+B,IAAI,GAAGD,YAAYpB,IAEvCsB,QAAS,WACR,IAAIC,EAAQnC,KAERoC,EAASpC,KAAKC,OAAOC,OAAOmC,KAAK,aAGrClD,EAAEiD,EAAO,IAAIE,cAAc,WAC1BH,EAAMI,aAGPC,WAAW,WACVJ,EAAOK,KAAK,SAASC,EAAOzB,GAC3B9B,EAAE8B,GAAOE,KACRwB,QAAW,MACTjB,MACFkB,UAAaxD,EAAKyD,QAAQC,UAAUX,EAAMxB,QAAQd,WAAa6C,EAAM,EAAI,GAAK,KAAK,WAGnF,MAEFlD","file":"../flux.transitions.concentric.js","sourcesContent":["define([\n\t\"skylark-jquery\",\n\t\"./flux\",\n\t\"./flux.transitions\"\n],function($,flux) {\n\tflux.transitions.concentric = function(fluxslider, opts) {\n\t\treturn new flux.transition(fluxslider, $.extend({\n\t\t\tblockSize: 60,\n\t\t\tdelay: 150,\n\t\t\talternate: false,\n\t\t\tsetup: function() {\n\t\t\t\tvar w = this.slider.image1.width(),\n\t\t\t\t\th = this.slider.image1.height(),\n\t\t\t\t\tlargestLength = Math.sqrt(w*w + h*h), // Largest length is the diagonal\n\n\t\t\t\t\t// How many blocks do we need?\n\t\t\t\t\tblockCount = Math.ceil(((largestLength-this.options.blockSize)/2) / this.options.blockSize) + 1, // 1 extra to account for the round border\n\t\t\t\t\tfragment = document.createDocumentFragment();\n\n\t\t\t\tfor(var i=0; i<blockCount; i++)\n\t\t\t\t{\n\t\t\t\t\tvar thisBlockSize = (2*i*this.options.blockSize)+this.options.blockSize;\n\n\t\t\t\t\tvar block = $('<div></div>').attr('class', 'block block-'+i).css({\n\t\t\t\t\t\twidth: thisBlockSize+'px',\n\t\t\t\t\t\theight: thisBlockSize+'px',\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: ((h-thisBlockSize)/2)+'px',\n\t\t\t\t\t\tleft: ((w-thisBlockSize)/2)+'px',\n\n\t\t\t\t\t\t'z-index': 100+(blockCount-i),\n\n\t\t\t\t\t\t'background-image': this.slider.image1.css('background-image'),\n\t\t\t\t\t\t'background-position': 'center center'\n\t\t\t\t\t}).css3({\n\t\t\t\t\t\t'border-radius': thisBlockSize+'px',\n\t\t\t\t\t\t'transition-duration': '800ms',\n\t\t\t\t\t\t'transition-timing-function': 'linear',\n\t\t\t\t\t\t'transition-property': 'all',\n\t\t\t\t\t\t'transition-delay': ((blockCount-i)*this.options.delay)+'ms'\n\t\t\t\t\t});\n\n\t\t\t\t\tfragment.appendChild(block.get(0));\n\t\t\t\t}\n\n\t\t\t\t//this.slider.image1.append($(fragment));\n\t\t\t\tthis.slider.image1.get(0).appendChild(fragment);\n\t\t\t},\n\t\t\texecute: function() {\n\t\t\t\tvar _this = this;\n\n\t\t\t\tvar blocks = this.slider.image1.find('div.block');\n\n\t\t\t\t// Get notified when the last transition has completed\n\t\t\t\t$(blocks[0]).transitionEnd(function(){\n\t\t\t\t\t_this.finished();\n\t\t\t\t});\n\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tblocks.each(function(index, block){\n\t\t\t\t\t\t$(block).css({\n\t\t\t\t\t\t\t'opacity': '0'\n\t\t\t\t\t\t}).css3({\n\t\t\t\t\t\t\t'transform': flux.browser.rotateZ((!_this.options.alternate || index%2 ? '' : '-')+'90')\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}, 50);\n\t\t\t}\n\t\t}, opts));\n\t};\n});"]}